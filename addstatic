#!/bin/bash
# addstatic
# KD4Z
# Version:  4.21
# Part of the user.db creation step.  Far more advanced than just
# including dmr-marc data.
# Ths script can merge in static DMR ids as part of the process.
#
# Optional static.users file requires a format that mimics the exact field layout of user.bin
# must contain seven fields, separated by commas
# (that means 6 commas per line!)
# leave field blank if no data is needed for a given field
#
# Example:
#  privateID1,call1,name1,city1,state1,nickname1,country1
#  privateID2,call2,name2,,,nickname2,
#  privateID3,call3,name3,,,,
#
# This file can be pulled in on-the-fly from an FTP server
# defined in static.host file
#
. ~/md380tools-vm/strings

FILESTATIC=~/static.users
FILENICK=user.nicknames
FILENICKZIP=~/md380tools-vm/nicknames.zip
STATICFILEHOST=~/static.host
FINALDMRMARC=~/md380tools/db/stripped.csv
USERDB=~/user.bin
TMPALTERNATE=~/alternate_strippedCSV.tmp
FINALALTERNATE=~/alternate_strippedCSV.final
ALTERNATESEMADISABLE=~/extra.data.disable
# With expressed permission from Wilfred Pontfoort
ALTERNATEURL=https://github.com/PD1LOI/MD380tools/raw/master/user.bin
MERGEERRORS=~/merge.errors
ALTFILEDLERROR=~/alternate.download.error

if [ -f $FILENICKZIP ]; then
    if [ -f $FILENICK ]; then
	  rm $FILENICK
    fi
    unzip $FILENICKZIP $FILENICK
	if [ "$?" -ne 0 ]; then
	  echo -e "${RED}An Error was returned from the unzip application. ($?)${NC}"
	  sleep 1
	fi
	if [ ! -f $FILENICK ]; then
	  echo -e "${RED}Unable to extract compressed file from $FILENICKZIP.${NC}"
	  sleep 2
	  echo -e "${GREEN}Continuing without nicknames.${NC}"
	else
		sed -i '/^[[:space:]]*$/d' $FILENICK
		if [ -f ~/keep.seed.file ]; then
			echo -e "${GREEN}Keeping seed file for next ${YELLOW}glv."
			echo -e "${GREEN}To force an update next glv: rm ~/keep.seed.file${NC}"
			cp $FILENICKZIP ~
			sleep 2
		fi
	fi
fi

if [ -f $TMPALTERNATE ]; then rm $TMPALTERNATE ; fi
if [ ! -f $ALTERNATESEMADISABLE ]; then
	OPTS="-quiet --no-verbose"
	if [ -f $TMPALTERNATE ] ; then rm $TMPALTERNATE ; fi
	echo -e "${WHITE}Downloading alternate data...${NC}"
	if [ -f ~/keep.tmp ]; then
		timeout 120 wget --no-check-certificate --wait=3 $ALTERNATEURL -O $TMPALTERNATE
	else
		timeout 120 wget --no-check-certificate --wait=3 $ALTERNATEURL -O $TMPALTERNATE  2>$ALTFILEDLERROR
	fi 
	if [ ! -f $TMPALTERNATE ]; then 
			echo -e " ${RED}Alternate data not downloaded.  See ${ALTFILEDLERROR} ${NC}"
	fi
	
	if [ -f $TMPALTERNATE ]; then
		sed -i '1d' $TMPALTERNATE
		sed -i -e 's/\r//' $TMPALTERNATE
		python ~/md380tools-vm/merge_users.py $TMPALTERNATE -o AbbrevCountries | awk -F, '!($7=="CA" || $7=="US") {print}' - >$FINALALTERNATE
	fi
fi

if [ -f $STATICFILEHOST ]; then
	if [ -f $FILESTATIC ]; then rm $FILESTATIC ; fi
    echo -e "${WHITE}Downloading ${FILESTATIC} from ${STATICFILEHOST}${NC}"
    timeout 120 wget --no-check-certificate --wait=3 -i $STATICFILEHOST -O $FILESTATIC
fi

if [ -f $FILESTATIC ]; then
  echo -e "${WHITE} Using ${FILESTATIC}${NC}"
  sed -i -e 's/\r//' $FILESTATIC  
fi

echo -e "${WHITE}Merging data...${NC}"
if [ -f $FINALDMRMARC ]; then
	FILELIST="$FINALDMRMARC"
fi
if [ -f $FINALALTERNATE ]; then 
	FILELIST="$FILELIST $FINALALTERNATE"  
fi
if [ -f $FILESTATIC ]; then
	FILELIST="$FILELIST $FILESTATIC"
fi
if [ -f $FILENICK ]; then
	FILELIST="$FILELIST $FILENICK"
fi
OPTS="-o AbbrevCountries -o AbbrevStates -o NoHeader"
if [ -f ~/keep.tmp ]; then
 echo -e "Filelist=$FILELIST Options=$OPTS" 
fi
if [ -f $MERGEERRORS ]; then rm $MERGEERRORS ; fi
echo -e -n "${RED}"

# Thanks to Dale Farnsworth dale@farnsworth.org for providing this complex merge routine in python.

python ~/md380tools-vm/merge_users.py $FILELIST $OPTS >$USERDB 2>$MERGEERRORS

echo -e "${WHITE}Contact Merge completed.${NC}"

countstatic=0
countalter=0
countseed=0
if [ -f $FILESTATIC ] ; then
  countstatic=$(wc --lines $FILESTATIC | cut -d" " -f1)
fi
if [ -f $FILENICK ] ; then
  countnick=$(wc --lines $FILENICK | cut -d" " -f1)
fi
if [ -f $FINALALTERNATE ] ; then
  countalter=$(wc --lines $FINALALTERNATE | cut -d" " -f1)
  sizealter=$(ls -l $FINALALTERNATE | cut -d" " -f5)
fi
countmarc=$(wc --lines $FINALDMRMARC | cut -d" " -f1)
sizemarc=$(ls -l $FINALDMRMARC | cut -d" " -f5)
countall=$(wc --lines $USERDB | cut -d" " -f1)
sizemergeerrors=$(ls -l $MERGEERRORS | cut -d" " -f5)
countmergeerrors=$(wc --lines $MERGEERRORS | cut -d" " -f1)
if [ -f ~/keep.tmp ]; then
  if (( sizemergeerrors > 10 )); then
	echo -e "${RED} ${countmergeerrors} records were not merged due to line format issues."
	echo -e " See the file ${MERGEERRORS} for details.${NC}"
	sleep 6
  fi
fi
echo -e "${GREEN}  DMR-MARC count   :  ${YELLOW}${countmarc}  records  ${GREEN}(${sizemarc}  bytes)"
if [ -f $FILENICK ] ; then
echo -e "${GREEN}  Nickname count   :  ${YELLOW}${countnick}  records"
fi
if [ -f $FINALALTERNATE ] ; then
echo -e "${GREEN}  Alternate count  :  ${YELLOW}${countalter}  records  ${GREEN}(${sizealter}  bytes)"
fi
if [ -f $FILESTATIC ] ; then
echo -e "${GREEN}  Static ID count  :  ${YELLOW}${countstatic}  records"
fi
if (( sizemergeerrors > 10 )); then
echo -e "${GREEN}  Records skipped  :  ${RED}${countmergeerrors}     ${YELLOW}records  ${GREEN}See ${MERGEERRORS}"
fi
if (( countall < 83000 )); then
  echo -e "${RED} ** The Downloads for Contact information may have failed - run ${YELLOW}glvusers${RED} again"
  echo -e "${RED} ** before running ${YELLOW}flashdb${RED}, as the user.bin is not normal size.${NC}"
  echo -e "\a"
  sleep 8
fi
echo -e "${GREEN}  Merged total     :  ${YELLOW}${countall}  records${NC}"

if [ ! -f ~/keep.tmp ]; then
    if [ -f $TMPALTERNATE ]; then rm $TMPALTERNATE ; fi	
	if [ -f $FINALALTERNATE ]; then rm $FINALALTERNATE ; fi
	if [ -f $FILENICK ]; then rm $FILENICK ; fi
fi
